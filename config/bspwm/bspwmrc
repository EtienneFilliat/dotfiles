#! /bin/sh

########################################
# Monitor
########################################

# set up the two monitors for bspwm
# eDP-1: 	Integrated Display
# DP-1: 	Personal USB-C Hub outputing on HDMI
# DP-1-1:	Dell Dock HDMI Port
# DP-1-2:	Dell Dock Mini-Display Port
# DP-1-3:	Dell Dock VGA Port
# DP-2:  	Misc Output
# DP-3:		Physical HDMI Port
# DVI-I-2-1: 	Work USB-C Hub outputing on HDMI

# eDP-1 is the fallback so we dont include it in the POTENTIAL_OUTPUTS
POTENTIAL_OUTPUTS=('DP-1' 'DP-2' 'DP-3' 'DVI-I-2-1' 'DP-1-3' 'DP-1-1' 'DP-1-2')
EXTERNAL_MONITORS=()
SCREEN_RESOLUTIONS=()

# Lookup connected outputs
for d in "${POTENTIAL_OUTPUTS[@]}"; do
        # Register "connected" displays showing up in xrandr
        if [[ $(xrandr --query | grep -w "$d" | cut -f 2 -d " ") == "connected" ]]; then
	       	EXTERNAL_MONITORS+=("$d")
		# Get their Maximum resolution
		SCREEN_RESOLUTIONS+=("$(xrandr --query | grep -w "$d" -A 1 | tail -n1 | cut -d" " -f4 )")
	fi
done

# Detect 2 connected monitors
# This is the WORK usecase where I don't need to use the integrated display (eDP-1)
if [[ ${#EXTERNAL_MONITORS[@]} -eq 2 ]]; then
        echo "External monitors ${EXTERNAL_MONITORS[@]} connected"
        xrandr --output eDP-1 --off \
                --output ${EXTERNAL_MONITORS[0]} --mode ${SCREEN_RESOLUTIONS[0]} --rotate normal --right-of eDP-1 \
                --output ${EXTERNAL_MONITORS[1]} --mode ${SCREEN_RESOLUTIONS[1]} --rotate normal --right-of ${EXTERNAL_MONITORS[0]}
        bspc monitor eDP-1 --remove
        bspc monitor ${EXTERNAL_MONITORS[0]} -d 1 2 3 4 5
        bspc monitor ${EXTERNAL_MONITORS[1]} -d 6 7 8 9 0

# Detect 1 connected monitor
# This is an __on the go__ setup where i rather use the integrated display (eDP-1)
# combined with the external display
elif [[ ${#EXTERNAL_MONITORS[@]} -eq 1 ]]; then
        echo "External monitor ${EXTERNAL_MONITORS[@]} connected"
        xrandr --output eDP-1 --primary --mode 1920x1080 --rotate normal \
                --output ${EXTERNAL_MONITORS[0]} --mode ${SCREEN_RESOLUTIONS[0]} --rotate normal --right-of eDP-1
        bspc monitor eDP-1 -d 1 2 3 4 5
        bspc monitor ${EXTERNAL_MONITORS[0]} -d 6 7 8 9 0

# Fallback setup with no displays attached
else
        echo "No external monitors detected"
        xrandr --output eDP-1 --primary --mode 1920x1080 --rotate normal
        bspc monitor eDP-1 -d 1 2 3 4 5 6 7 8 9 0
fi

#bspc wm -O eDP-1 $external_monitor

########################################
# Design
########################################

bspc config border_width 2
bspc config window_gap 10
bspc config split_ratio 0.50

bspc config borderless_monocle true
bspc config gapless_monocle true
bspc config single_monocle false
bspc config focus_follows_pointer true

bspc config focused_border_color  #81A1C1
bspc config normal_border_color   #2E3440
bspc config active_border_color   #B48EAD
bspc config presel_feedback_color #A3BE8C

########################################
# Rules
########################################

# Fix for Spotify setting up WM_CLASS too late.
# See https://github.com/baskerville/bspwm/issues/291#issuecomment-265999167
bspc config external_rules_command ${Home}.config/bspwm/scripts/bspwm-rules

bspc rule -a Chromium desktop='^2' border=off
bspc rule -a TelegramDesktop desktop='^5' border=off
bspc rule -a Discord desktop='^5' border=off
bspc rule -a "Microsoft Teams - Preview" desktop='^6' border=off
bspc rule -a code-oss border=off

########################################
# Startup
########################################

# Launch Polybar
${HOME}/.config/polybar/launch.sh

# Launch compositor
killall -qw picom
picom --experimental-backend &

# Launch dunst
/usr/bin/dunst &

# Fix cursor
xsetroot -cursor_name left_ptr &

# Setup wallpaper
feh --no-fehbg --bg-scale ${HOME}/.config/bspwm/wallpapers/Flat-BSPWM.png

# Force reload sxhkd (started in .xinitrc)
pkill -USR1 -x sxhkd
